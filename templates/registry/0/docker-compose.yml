registry:
  ports:
    - 5000:5000/tcp
  environment:
    REGISTRY_HTTP_SECRET: ${REGISTRY_HTTP_SECRET}
    REGISTRY_STORAGE_DELETE_ENABLED: true
    REGISTRY_AUTH: htpasswd
    REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
    REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/cert.pem
    REGISTRY_HTTP_TLS_KEY: /certs/key.pem
    REGISTRY_HTTP_TLS_CLIENTCAS_0: /certs/ca.pem
  labels:
    io.rancher.sidekicks: create-certs,registry-auth,registry-datavolume
    io.rancher.container.pull_image: always
  tty: true
  image: registry:2
  volumes_from:
    - create-certs
    - registry-auth
    - registry-datavolume
  stdin_open: true
registry-datavolume:
  labels:
    io.rancher.container.start_once: 'true'
    io.rancher.container.pull_image: always
  command: /bin/true
  image: busybox:latest
  net: none
  volumes:
    - ${REGISTRY_DATA}:/var/lib/registry
  volume_driver: ${VOLUME_DRIVER}
create-certs:
  environment:
    CA_SUBJECT: 'docker-ca'
    CA_EXPIRE: ${MAX_DAYS}
    SSL_SUBJECT: ${FQDN}
    SSL_EXPIRE: ${MAX_DAYS}
    SSL_DNS: ${SAN_DNS}
    SSL_IP: ${SAN_IP}
  labels:
    io.rancher.container.start_once: 'true'
    io.rancher.container.pull_image: always
  tty: true
  image: paulczar/omgwtfssl:latest
  net: none
  volumes:
    - ${CERTIFICATE_DATA}:/certs
  volume_driver: ${VOLUME_DRIVER}
  stdin_open: true
registry-auth:
  labels:
    io.rancher.container.start_once: 'true'
    io.rancher.container.pull_image: always
  command:
    - htpasswd
    - -cBb
    - /auth/htpasswd
    - ${DOCKER_USERNAME}
    - ${DOCKER_PASSWORD}
  tty: true
  image: registry:2
  net: none
  volumes_from:
    - registry-datavolume
  volumes:
    - ${AUTHENTICATION_DATA}:/auth
  volume_driver: ${VOLUME_DRIVER}
  stdin_open: true
